# Form implementation generated from reading ui file 'signin.ui'
#
# Created by: PyQt6 UI code generator 6.7.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QMessageBox

class Ui_Dangky(object):
    def setupUi(self, Dangky):
        Dangky.setObjectName("Dangky")
        Dangky.resize(905, 675)
        Dangky.setWindowFlag(QtCore.Qt.WindowType.FramelessWindowHint)
        Dangky.setAttribute(QtCore.Qt.WidgetAttribute.WA_TranslucentBackground)
        self.widget = QtWidgets.QWidget(parent=Dangky)
        self.widget.setGeometry(QtCore.QRect(150, 60, 551, 511))
        self.widget.setObjectName("widget")
        self.dangky = QtWidgets.QLabel(parent=self.widget)
        self.dangky.setGeometry(QtCore.QRect(20, 45, 510, 131))
        font = QtGui.QFont()
        font.setFamily("Public Sans Black")
        font.setPointSize(31)
        font.setBold(True)
        font.setWeight(75)
        self.dangky.setFont(font)
        self.dangky.setStyleSheet("color : rgb(1, 24, 156)")
        self.dangky.setTextFormat(QtCore.Qt.TextFormat.MarkdownText)
        self.dangky.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.dangky.setObjectName("dangky")
        self.bg = QtWidgets.QLabel(parent=self.widget)
        self.bg.setGeometry(QtCore.QRect(20, 15, 510, 481))
        self.bg.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"border-radius: 20px;")
        self.bg.setText("")
        self.bg.setObjectName("bg")
        self.username = QtWidgets.QLineEdit(parent=self.widget)
        self.username.setGeometry(QtCore.QRect(115, 170, 321, 31))
        self.username.setStyleSheet("background-color: rgab(0,0,0,0);\n"
"border : none;\n"
"border-bottom : 2px solid rgb(1, 24, 156);\n"
"color: rgb(0, 0, 0);\n"
"padding-bottom: 1px;")
        self.username.setText("")
        self.username.setMaxLength(100)
        self.username.setEchoMode(QtWidgets.QLineEdit.EchoMode.Normal)
        self.username.setObjectName("username")
        self.password = QtWidgets.QLineEdit(parent=self.widget)
        self.password.setGeometry(QtCore.QRect(115, 240, 321, 31))
        self.password.setStyleSheet("background-color: rgab(0,0,0,0);\n"
"border : none;\n"
"border-bottom : 2px solid rgb(1, 24, 156);\n"
"color: rgb(0, 0, 0);\n"
"padding-bottom: 1px;")
        self.password.setText("")
        self.password.setMaxLength(100)
        self.password.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.password.setObjectName("password")

        self.confirm_password = QtWidgets.QLineEdit(parent=self.widget)
        self.confirm_password.setGeometry(QtCore.QRect(115, 310, 321, 31))
        self.confirm_password.setStyleSheet("background-color: rgab(0,0,0,0);\n"
"border : none;\n"
"border-bottom : 2px solid rgb(1, 24, 156);\n"
"color: rgb(0, 0, 0);\n"
"padding-bottom: 1px;")
        self.confirm_password.setText("")
        self.confirm_password.setMaxLength(100)
        self.confirm_password.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.confirm_password.setObjectName("confirm_password")
        
        self.registerbutton = QtWidgets.QPushButton(parent=self.widget)
        self.registerbutton.setGeometry(QtCore.QRect(205, 385, 141, 31))
        self.registerbutton.setStyleSheet("QPushButton\n"
"{\n"
"color: rgb(255, 255, 255);\n"
"font: 10pt \"Nunito Medium\";\n"
"border-radius: 15px;\n"
"background-color: rgb(1, 24, 156);\n"
"}\n"
"QPushButton:hover\n"
"{\n"
"color: rgb(1, 24, 156);\n"
"font: 10pt \"Nunito Black\";\n"
"background-color: rgb(222, 233, 255);\n"
"border-radius: 15px;\n"
"}\n"
"QPushButton:pressed\n"
"{\n"
"color: rgb(0,0,0);\n"
"font: 10pt \"Nunito Medium\";\n"
"border-radius: 15px;\n"
"background-color: rgb(255, 255, 255);\n"
"}")
        self.registerbutton.setAutoDefault(False)
        self.registerbutton.setDefault(False)
        self.registerbutton.setObjectName("registerbutton")
        self.bg.raise_()
        self.dangky.raise_()
        self.registerbutton.raise_()
        self.password.raise_()
        self.username.raise_()
        self.confirm_password.raise_()

        # Xac thuc Email va Password
        self.registerbutton.clicked.connect(self.xulydangky)


        self.retranslateUi(Dangky)
        QtCore.QMetaObject.connectSlotsByName(Dangky)

    def retranslateUi(self, Dangky):
        _translate = QtCore.QCoreApplication.translate
        Dangky.setWindowTitle(_translate("Dangky", "Form"))
        self.dangky.setText(_translate("Dangky", "REGISTER"))
        self.registerbutton.setText(_translate("Dangky", "Register"))
        self.password.setPlaceholderText(_translate("Dangky", "Password"))
        self.username.setPlaceholderText(_translate("Dangky", "Username"))
        self.confirm_password.setPlaceholderText(_translate("Dangky", "Confirm Password"))

    def xulydangky(self):
        #Lay du lieu tu form
        username = self.username.text().strip() #strip : loai bo khoang trang du thua
        password = self.password.text().strip()
        re_password = self.confirm_password.text().strip()
        #Kiem tra rong
        if username == "":
            self.thong_bao_loi("Lỗi","Username không được để trống!")
            return
        elif password == "":
            self.thong_bao_loi("Lỗi","Password không được để trống!")
            return
        elif re_password == "":
            self.thong_bao_loi("Lỗi","Confirm Password không được để trống!")
            return
        
        #Kiem tra password trung khop confirm password
        if password != re_password:
            self.thong_bao_loi("Lỗi", "Confirm password không trùng khớp!")
            return


    def thong_bao_loi(self, set_title, set_text):
        msg = QMessageBox()
        msg.setIcon(QMessageBox.Icon.Information)
        msg.setWindowTitle(set_title)
        msg.setText(set_text)
        msg.exec()
    

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dangky = QtWidgets.QWidget()
    ui = Ui_Dangky()
    ui.setupUi(Dangky)
    Dangky.show()
    sys.exit(app.exec())
